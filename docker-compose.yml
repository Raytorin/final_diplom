version: '3.9'

volumes:
  pgdata:
  static_files:

networks:
  backend:
  frontend:

services:
  web:
    build: .
    env_file:
      - .env
    volumes:
      - static_files:/new_project/static
    depends_on:
      postgresql:
        condition: service_healthy
    ports:
      - '8000:8000'
    networks:
      - backend
      - frontend

  postgresql:
    image: 'postgres:12'
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB' ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 3s
    restart: unless-stopped
    networks:
      - backend

  nginx:
    image: 'nginx'
    ports:
      - '8080:8000'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_files:/var/www/html/static
    depends_on:
      - web
      - postgresql
    networks:
      - frontend